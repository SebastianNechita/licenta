<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>8</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>384</x>
      <y>304</y>
      <w>296</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>GroundTruthPredictor
--
+annotations: dict
--
+__init__(self, chosenDataset, setName: str, videoNr: str)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>416</x>
      <y>40</y>
      <w>304</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>VideoHolder
--
+setName: str
+videoNr: str
+chosenDataset: Dataset
+video
--
+__init__(self, chosenDataset, setName: str, videoNr: str)
+getLength(self)
+getVideo(self)
+getFrame(self, frameNr)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>536</x>
      <y>176</y>
      <w>32</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>20.0;10.0;10.0;160.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1224</x>
      <y>240</y>
      <w>416</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>YoloPredictor
--
+yoloObject: YOLO
+cache: dict
+savePath: str
+videoHolder: VideoHolder
+config: BasicConfig
--
+__init__(self, videoHolder: VideoHolder, config: BasicConfig)
+getPredictionPathForFrame(self, frameNr: int)
+readPredictionBoxes(self, predictionPath: str)
+writePredictionBoxes(self, predictionsPath: str, objects: Sequence[PredictedBox]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>840</x>
      <y>96</y>
      <w>192</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Interface&gt;&gt;
Predictor
--
--
+predictForFrame(self, frameNr: int)
+finishPrediction(self)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>568</x>
      <y>160</y>
      <w>384</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>460.0;10.0;460.0;50.0;10.0;180.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>928</x>
      <y>160</y>
      <w>376</w>
      <h>296</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0;450.0;350.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>272</x>
      <y>416</y>
      <w>616</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>FakePredictor
--
+realProbRange: Tuple[int, int] 
+predictor: Predictor
+videoHolder: VideoHolder
+fakeProbRange: Tuple[int, int] 
--
+__init__(fakeProbRange: Tuple[int, int], realProbRange: Tuple[float, float], predictor: Predictor, videoHolder: VideoHolder)
+getFakePredictionsForFrame(self, frameNr: int)
_-__limitBetween(number: int, left: int, right: int)_
+getPredictedBoxesForFrame(self, frameNr: int)
+getFakePredictionsForFrame(self, frameNr)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>648</x>
      <y>160</y>
      <w>304</w>
      <h>272</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>360.0;10.0;360.0;50.0;10.0;320.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1024</x>
      <y>440</y>
      <w>504</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>TrackerPredictor
--
+tracker: Tracker
+activeObjects: dict
+predictor: Predictor
+videoHolder: VideoHolder
+config: BasicConfig
--
+__init__(self, predictor: Predictor, videoHolder: VideoHolder, tracker: Tracker, config: BasicConfig)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>784</x>
      <y>320</y>
      <w>264</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>MinScoreWrapperPredictor
--
+minScore: float
+predictor: Predictor
--
+__init__(self, predictor: Predictor, minScore: float)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>904</x>
      <y>160</y>
      <w>48</w>
      <h>176</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>40.0;10.0;40.0;50.0;10.0;200.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>928</x>
      <y>160</y>
      <w>528</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0;640.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>328</x>
      <y>800</y>
      <w>384</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>Tracker
--
+trackerType
--
+__init__(self)
/+track(self, uniqueId: str, image, bbox: Tuple[int, int, int, int], imageHash: int)/
/+parallelizable(self)/
+trackAll(self, uniqueIds: Sequence[str], image, imageHash: int)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>1000</y>
      <w>168</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>FakeTracker
--
-__trackers: dict
--
+__init__(self)
+track(self, uniqueId: str, image, bbox: Tuple[int, int, int, int], imageHash: int)
+parallelizable(self)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>72</x>
      <y>904</y>
      <w>456</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>550.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>176</x>
      <y>1016</y>
      <w>392</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>Re3ObjectTracker
--
-__tracker: Re3Tracker
--
+__init__(self)
+track(self, uniqueId: str, image, bbox: Tuple[int, int, int, int], imageHash: int)
+parallelizable(self)
_+getTracker()_</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>368</x>
      <y>904</y>
      <w>160</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>180.0;10.0;10.0;140.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>584</x>
      <y>1040</y>
      <w>392</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>OpenCVTracker
--
-__trackers: dict
_OPENCV_OBJECT_TRACKERS: dict_
--
+__init__(self, trackerType)
+track(self, uniqueId: str, image, bbox: Tuple[int, int, int, int], imageHash: int)
+parallelizable(self)
+trackAll(self, uniqueIds: Sequence[str], image, imageHash: int)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>504</x>
      <y>904</y>
      <w>192</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;220.0;170.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1000</x>
      <y>1032</y>
      <w>392</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>CachingTracker
--
+hashToAnswer: dict
+idsToHash: dict
+tracker: Tracker
--
+__init__(self, trackerType)
-__imageHash(image)
+track(self, uniqueId: str, image, bbox: Tuple[int, int, int, int], imageHash: int)
+parallelizable(self)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>504</x>
      <y>904</y>
      <w>720</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;880.0;160.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1168</x>
      <y>0</y>
      <w>272</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>Dataset
--
+baseDir: str
+datasetName: str
--
+__init__(baseDir: str)
+getVideoPath(self, videoSet: str, videoNr: str)
+getAnnotationsPath(self, videoSet: str, videoNr: str)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1176</x>
      <y>144</y>
      <w>232</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>CaltechDataset
--
--
+__init__(baseDir: str)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1280</x>
      <y>96</y>
      <w>24</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>760</x>
      <y>608</y>
      <w>168</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>PredictedBox
--
-__x1: int
-__y1: int
-__x2: int
-__y2: int
-__prob: float
-__label: str
--
+__init__(self, x1: int, y1: int, x2: int, y2: int, label:str, prob: float)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1944</x>
      <y>152</y>
      <w>208</w>
      <h>504</h>
    </coordinates>
    <panel_attributes>BasicConfig
--
+trainId: str
+modelName: str
+inputShape: Tuple[int, int]
+freezeNoEpochs: int
+noFreezeNoEpochs: int
+isTiny: boolean
+validationSplit: float
+freezeBatchSize: int
+noFreezeBatchSize: int
+loadPreTrained: boolean
+preTrainedModelPath: str
+checkpointPeriod: int
+initialLR: float
+alreadyTrainedEpochs: int
+createThreshold: float
+removeThreshold: float
+surviveThreshold: float
+surviveMovePercent: float
+minScorePrediction: float
+maxNrOfObjectsPerFrame: int
+maxAge: int
+imageGenerationSavePeriod: int
+imageGenerationSavePath: str
+imageGenerationSaveFileName: str
+batchSplit: Tuple[float, float, float, float]
+trackerType: str
-__dict__
--
+save(self, configFile: str)
+saveText(self, configFile: str)
+getDictionary(self)
+updateDictionary(self)
+getModelPath(self)
+getAnchorsPath(self)
+getPredictionsPath(self)
_+configName()_
+getTrackingHyperParameters(self)
+__str__(self)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1864</x>
      <y>960</y>
      <w>168</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
Trainer
--
--
+train(self)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1768</x>
      <y>1048</y>
      <w>344</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>YOLOTrainer
--
+config: BasicConfig
+annotationFiles: Sequence[str]
--
+__init__(self, config: BasicConfig, annotationFiles: Sequence[str])
+createAnnotationFile(self)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1936</x>
      <y>1008</y>
      <w>24</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1024</x>
      <y>600</y>
      <w>368</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>TrackedObject
--
-__pos
-__label
-__frameCreated
--
+__init__(self, pos: Tuple[int, int, int, int], frameCreated: int, label: str)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2096</x>
      <y>856</y>
      <w>168</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>ConverterToImagesYOLOv3
--
+uId
+csvSet
+textPattern
+possibleLabels
--
+__init__(self, textPattern: str)
+clearDirectory(self)
+saveImagesFromGroundTruth(self, datasetName: str, setName: str, videoNr: str)
+writeAnnotationsFile(self)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1648</x>
      <y>808</y>
      <w>168</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>Evaluator
--
+predictors
+groundTruthPredictors
+result
+maxFrames
+computed
--
+__init__(self, predictors: Sequence[Predictor], groundTruthPredictors: Sequence[GroundTruthPredictor], maxFrames: int)
+evaluate(self, verbose: bool)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>704</x>
      <y>1424</y>
      <w>528</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>NewDataGenerator
--
+predictor: Predictor
+textPattern: str
+videoHolder: VideoHolder
--
+__init__(self, predictor: Predictor, videoHolder: VideoHolder, textPattern: str)
+generateNewData(self, selectPeriod: int, saveFolder: str, saveFileName: str, verbose: bool, frameNr: int)
_+initializeDirectory(saveFolder: str)_</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>240</x>
      <y>1376</y>
      <w>360</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>HPGenerator
--
+ranges: Sequence[tuple]
+initialTries: Sequence[tuple]
--
+__init__(self, initialTries: Sequence[tuple], ranges: Sequence[tuple])
+getNextRange(self)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>256</x>
      <y>1560</y>
      <w>312</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>LinearHPGenerator
--
--
+__init__(self, ranges: Sequence[tuple], gridSize: int)
-__updateToRange(self, number: float, rng: Tuple[float, float]</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>408</x>
      <y>1464</y>
      <w>24</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1480</x>
      <y>136</y>
      <w>200</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>YOLOManager
--
+existentYoloObjects: dict
-__cache: dict
--
+getYoloObject(config: BasicConfig)
+getGlobalCache()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1200</x>
      <y>960</y>
      <w>248</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>CachingTrackerManager
--
+trackersConfigurations: dict
--
+getConfigurationForTracker(trackerType: str)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1248</x>
      <y>1440</y>
      <w>80</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>IdGenerator
--
-__theId
--
+getStringId()</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
